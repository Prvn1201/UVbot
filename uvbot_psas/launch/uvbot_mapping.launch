<?xml version="1.0"?>
<launch>
  <!--Arguments-->
  <arg name="rviz_config" default="$(find uvbot_psas)/rviz/uvbot_mapping.rviz"/>
  <arg name="hardware_config" default="$(find uvbot_psas)/yaml/uvbot_hardware.yaml"/>
  <arg name="odometry_config" default="$(find uvbot_psas)/yaml/uvbot_odometry.yaml"/>
  <arg name="movebase_config" default="$(find uvbot_psas)/yaml/uvbot_movebase.yaml"/>
  <arg name="global_planner_config" default="$(find uvbot_psas)/yaml/uvbot_global_planner.yaml"/>
  <arg name="local_planner_config" default="$(find uvbot_psas)/yaml/uvbot_local_planner.yaml"/>
  <arg name="global_costmap_config" default="$(find uvbot_psas)/yaml/uvbot_global_costmap.yaml"/>
  <arg name="local_costmap_config" default="$(find uvbot_psas)/yaml/uvbot_local_costmap.yaml"/>
  <arg name="gmapping_config" default="$(find uvbot_psas)/yaml/uvbot_gmapping.yaml"/>

  <rosparam command="load" file="$(arg odometry_config)"/>
  <rosparam command="load" file="$(arg hardware_config)" />

   <!--ODOM-->
  <node name="odometry_node" pkg="robot_localization" type="ekf_localization_node" respawn="true">
    <rosparam file="$(arg odometry_config)" command="load"/>
    <remap from="set_pose" to="initialpose/ekf"/>
  </node>

  <!--MOVEBASE-->
  <node name="movebase_node" pkg="move_base" type="move_base" respawn="true" output="screen">
    <rosparam file="$(arg movebase_config)" command="load"/>
    <rosparam file="$(arg global_planner_config)" command="load"/>
    <rosparam file="$(arg local_planner_config)" command="load"/>
    <rosparam file="$(arg global_costmap_config)" command="load"/>
    <rosparam file="$(arg local_costmap_config)" command="load"/>  
    <remap from="odom" to="odometry/filtered"/>
    <remap from="cmd_vel" to="movebase/cmd_vel"/>
  </node>

 <node name="gmapping_node" pkg="gmapping" type="slam_gmapping" respawn="true" output="screen" launch-prefix="bash -c 'sleep 2; $0 $@'">
    <rosparam file="$(arg gmapping_config)" command="load"/>
    <remap from="scan" to="scan_filter/scan"/> 
    <param name="buffer_size" value="100"/>  
 </node>

  
  <!--<node name="hector_mapping" pkg="hector_mapping" type="hector_mapping" output="screen">
    <param name="scan_topic" value="scan_filter/scan" />
    <param name="map_frame" value="map" />
    <param name="base_frame" value="base_link" />
    <param name="odom_frame" value="odom" />
    <param name="output_timing" value="false" />
    <param name="pub_map_odom_transform" value="true" />
    <param name="scan_subscriber_queue_size" value="5" />
    <param name="use_tf_pose_start_estimate" value="true" />
    <param name="tf_pose_start_estimate_frame_id" value="map" />
    <param name="tf_pose_start_estimate_child_frame_id" value="base_link" />
    <param name="map_update_interval" value="5.0" />
    <param name="map_resolution" value="0.05" />
    <param name="map_size" value="2048" />
    <param name="odom_frame_id" value="odom" />
    <param name="odom_topic" value="/odom" />
    <param name="update_factor_free" value="0.4" />
    <param name="update_factor_occupied" value="0.9" />
    <param name="tf_buffer_length" value="10.0" />
    <param name="publish_frequency" type="double" value="5.0"/>

  </node>-->


  <!--ZLAC8015D-->
  <node name="uvbot_psas" pkg="uvbot_psas" type="zlac8015d_node.py">
  </node>
  
  <!--P2L-->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/ouster/points"/>
      <remap from="scan" to="/scan_filter/scan" />
    </node>

  <!--<include file="$(find uvbot_psas)/launch/hector.launch"/>-->
  <!--<include file="$(find uvbot_psas)/launch/gmapping.launch"/>-->
  <include file="$(find uvbot_psas)/launch/imu_data.launch"/>
  <include file="$(find teleop_twist_joy)/launch/teleop.launch"/>
  <include file="$(find ouster_ros)/launch/sensor.launch"/>
  <include file="$(find robotuv)/launch/display.launch"/>
  <include file="$(find uvbot_psas)/launch/uvbot_config.launch">
    <arg name="rviz_config" value="$rviz_config"/>
   </include> 

</launch>